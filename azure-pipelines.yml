pool:
 vmImage: 'Ubuntu 16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/trustwallet/blockatlas' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
    echo '$(go env)'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    go get github.com/jstemmer/go-junit-report
    go get github.com/axw/gocov/gocov
    go get github.com/AlekSi/gocov-xml
    go get -u gopkg.in/matm/v1/gocov-html
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies'

  - powershell: |
  env:
    ATLAS_BINANCE_API: $(ATLAS_BINANCE_API)
    ATLAS_ETHEREUM_API: $(ATLAS_ETHEREUM_API)
    ATLAS_KIN_API: $(ATLAS_KIN_API)
    ATLAS_NIMIQ_API: $(ATLAS_NIMIQ_API)
    ATLAS_RIPPLE_API: $(ATLAS_RIPPLE_API)
    ATLAS_STELLAR_API: $(ATLAS_STELLAR_API)
    ATLAS_COSMOS_API: $(ATLAS_COSMOS_API)
  displayName: "Set environment variables"

- script: go test -v ./...
  workingDirectory: '$(modulePath)'
  displayName: 'Run unit tests'

- script: go build -v -o blockatlas ./cmd
  workingDirectory: '$(modulePath)'
  displayName: 'Build'

- bash: |
    set -e
    ./blockatlas api
    sleep 3 # Wait for BlockAtlas to spin up
    go run ./test/main.go --all http://localhost:8420
  workingDirectory: '$(modulePath)'
  displayName: 'Run integration test'
