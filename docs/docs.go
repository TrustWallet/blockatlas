// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-06-03 12:57:01.548632 +0800 CST m=+0.074416980

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ns/lookup": {
            "get": {
                "description": "Lookup ENS/ZNS to find registered addresses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Naming"
                ],
                "summary": "Lookup .eth / .zil addresses",
                "operationId": "lookup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "string name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "string coin",
                        "name": "coin",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blockatlas.Resolved"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/market/charts": {
            "get": {
                "description": "Get the charts data from an market and coin/token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market"
                ],
                "summary": "Get charts data for a specific coin",
                "operationId": "get_charts_data",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 60,
                        "description": "Coin ID",
                        "name": "coin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1574483028,
                        "description": "Start timestamp",
                        "name": "time_start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 64,
                        "description": "Max number of items in result prices array",
                        "name": "max_items",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "USD",
                        "description": "The currency to show charts",
                        "name": "currency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ChartData"
                        }
                    }
                }
            }
        },
        "/v1/market/info": {
            "get": {
                "description": "Get the charts coin info data from an market and coin/contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market"
                ],
                "summary": "Get charts coin info data for a specific coin",
                "operationId": "get_charts_coin_info",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 60,
                        "description": "Coin ID",
                        "name": "coin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "USD",
                        "description": "The currency to show coin info in",
                        "name": "currency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ChartCoinInfo"
                        }
                    }
                }
            }
        },
        "/v1/market/ticker": {
            "post": {
                "description": "Get the ticker values from many market and coin/token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Market"
                ],
                "summary": "Get ticker values for a specific market",
                "operationId": "get_tickers",
                "parameters": [
                    {
                        "description": "Ticker",
                        "name": "tickers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.TickerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/endpoint.Tickers"
                        }
                    }
                }
            }
        },
        "/v1/{coin}/xpub/{xpub}": {
            "get": {
                "description": "Get transactions from XPUB address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Transactions by XPUB",
                "operationId": "txxpub_v1",
                "parameters": [
                    {
                        "type": "string",
                        "default": "bitcoin",
                        "description": "the coin name",
                        "name": "coin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "zpub6ruK9k6YGm8BRHWvTiQcrEPnFkuRDJhR7mPYzV2LDvjpLa5CuGgrhCYVZjMGcLcFqv9b2WvsFtY2Gb3xq8NVq8qhk9veozrA2W9QaWtihrC",
                        "description": "the xpub key",
                        "name": "xpub",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/{coin}/{address}": {
            "get": {
                "description": "Get transactions from the address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Transactions",
                "operationId": "tx_v1",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tezos",
                        "description": "the coin name",
                        "name": "coin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "tz1WCd2jm4uSt4vntk4vSuUWoZQGhLcDuR9q",
                        "description": "the query address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/ns/lookup": {
            "get": {
                "description": "Lookup ENS/ZNS to find registered addresses for multiple coins",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Naming"
                ],
                "summary": "Lookup .eth / .zil addresses",
                "operationId": "lookup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "string name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "List of coins",
                        "name": "coins",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/blockatlas.Resolved"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/staking/delegations": {
            "post": {
                "description": "Get Stake Delegations for multiple coins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staking"
                ],
                "summary": "Get Multiple Stake Delegations",
                "operationId": "batch_delegations",
                "parameters": [
                    {
                        "description": "Validators addresses and coins",
                        "name": "delegations",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.AddressesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blockatlas.DelegationsBatchPage"
                        }
                    }
                }
            }
        },
        "/v2/staking/list": {
            "post": {
                "description": "Get Stake Delegations for multiple coins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staking"
                ],
                "summary": "Get Multiple Stake Delegations",
                "operationId": "batch_delegations",
                "parameters": [
                    {
                        "description": "Validators addresses and coins",
                        "name": "delegations",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoint.AddressesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blockatlas.DelegationsBatchPage"
                        }
                    }
                }
            }
        },
        "/v2/tokens": {
            "post": {
                "description": "Get tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get list of tokens by map: coin -\u003e [addresses]",
                "operationId": "tokens_v3",
                "parameters": [
                    {
                        "default": "{\"60\": [\"0xb3624367b1ab37daef42e1a3a2ced012359659b0\"]}",
                        "description": "Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blockatlas.ResultsResponse"
                        }
                    }
                }
            }
        },
        "/v2/{coin}/staking/delegations/{address}": {
            "get": {
                "description": "Get stake delegations from the address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staking"
                ],
                "summary": "Get Stake Delegations",
                "operationId": "delegations",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tron",
                        "description": "the coin name",
                        "name": "coin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "TPJYCz8ppZNyvw7pTwmjajcx4Kk1MmEUhD",
                        "description": "the query address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blockatlas.DelegationResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/{coin}/staking/validators": {
            "get": {
                "description": "Get validators from the address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staking"
                ],
                "summary": "Get Validators",
                "operationId": "validators",
                "parameters": [
                    {
                        "type": "string",
                        "default": "cosmos",
                        "description": "the coin name",
                        "name": "coin",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blockatlas.DocsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/{coin}/tokens/{address}": {
            "get": {
                "description": "Get tokens from the address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Tokens",
                "operationId": "tokens",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ethereum",
                        "description": "the coin name",
                        "name": "coin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "0x5574Cd97432cEd0D7Caf58ac3c4fEDB2061C98fB",
                        "description": "the query address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blockatlas.CollectionPage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/{coin}/transactions/xpub/{xpub}": {
            "get": {
                "description": "Get transactions from XPUB address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Transactions by XPUB",
                "operationId": "tx_xpub_v2",
                "parameters": [
                    {
                        "type": "string",
                        "default": "bitcoin",
                        "description": "the coin name",
                        "name": "coin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "zpub6ruK9k6YGm8BRHWvTiQcrEPnFkuRDJhR7mPYzV2LDvjpLa5CuGgrhCYVZjMGcLcFqv9b2WvsFtY2Gb3xq8NVq8qhk9veozrA2W9QaWtihrC",
                        "description": "the xpub key",
                        "name": "xpub",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v2/{coin}/transactions/{address}": {
            "get": {
                "description": "Get transactions from the address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transactions"
                ],
                "summary": "Get Transactions",
                "operationId": "tx_v2",
                "parameters": [
                    {
                        "type": "string",
                        "default": "tezos",
                        "description": "the coin name",
                        "name": "coin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "tz1WCd2jm4uSt4vntk4vSuUWoZQGhLcDuR9q",
                        "description": "the query address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blockatlas.TxPage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v3/staking/list": {
            "get": {
                "description": "Get staking info by coin ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Staking"
                ],
                "summary": "Get staking info by coin ID",
                "operationId": "batch_info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List of coins",
                        "name": "coins",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/blockatlas.DelegationsBatchPage"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v4/collectibles/categories": {
            "post": {
                "description": "Get collection categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Get list of collections from a specific coin and addresses",
                "operationId": "collection_categories_v4",
                "parameters": [
                    {
                        "default": "{\"60\": [\"0xb3624367b1ab37daef42e1a3a2ced012359659b0\"]}",
                        "description": "Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blockatlas.DocsResponse"
                        }
                    }
                }
            }
        },
        "/v4/{coin}/collections/{owner}/collection/{collection_id}": {
            "get": {
                "description": "Get a collection from the address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collections"
                ],
                "summary": "Get Collection",
                "operationId": "collection_v4",
                "parameters": [
                    {
                        "type": "string",
                        "default": "ethereum",
                        "description": "the coin name",
                        "name": "coin",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "0x0875BCab22dE3d02402bc38aEe4104e1239374a7",
                        "description": "the query address",
                        "name": "owner",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "0x06012c8cf97bead5deae237070f9587f8e7a266d",
                        "description": "the query collection",
                        "name": "collection_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/blockatlas.CollectionPage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "blockatlas.Collection": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "coin": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "external_link": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "blockatlas.CollectionPage": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/blockatlas.Collection"
            }
        },
        "blockatlas.Delegation": {
            "type": "object",
            "properties": {
                "delegator": {
                    "type": "object",
                    "$ref": "#/definitions/blockatlas.StakeValidator"
                },
                "metadata": {
                    "type": "object"
                },
                "status": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "blockatlas.DelegationResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "string"
                },
                "coin": {
                    "type": "object",
                    "$ref": "#/definitions/coin.ExternalCoin"
                },
                "delegations": {
                    "type": "object",
                    "$ref": "#/definitions/blockatlas.DelegationsPage"
                },
                "details": {
                    "type": "object",
                    "$ref": "#/definitions/blockatlas.StakingDetails"
                }
            }
        },
        "blockatlas.DelegationsBatchPage": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/blockatlas.DelegationResponse"
            }
        },
        "blockatlas.DelegationsPage": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/blockatlas.Delegation"
            }
        },
        "blockatlas.DocsResponse": {
            "type": "object",
            "properties": {
                "docs": {
                    "type": "object"
                }
            }
        },
        "blockatlas.Resolved": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "integer"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "blockatlas.ResultsResponse": {
            "type": "object",
            "properties": {
                "docs": {
                    "type": "object"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "blockatlas.StakeValidator": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "$ref": "#/definitions/blockatlas.StakingDetails"
                },
                "id": {
                    "type": "string"
                },
                "info": {
                    "type": "object",
                    "$ref": "#/definitions/blockatlas.StakeValidatorInfo"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "blockatlas.StakeValidatorInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "blockatlas.StakingDetails": {
            "type": "object",
            "properties": {
                "locktime": {
                    "type": "integer"
                },
                "minimum_amount": {
                    "type": "string"
                },
                "reward": {
                    "type": "object",
                    "$ref": "#/definitions/blockatlas.StakingReward"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "blockatlas.StakingReward": {
            "type": "object",
            "properties": {
                "annual": {
                    "type": "number"
                }
            }
        },
        "blockatlas.Tx": {
            "type": "object",
            "properties": {
                "block": {
                    "description": "Height of the block the transaction was included in",
                    "type": "integer"
                },
                "coin": {
                    "description": "SLIP-44 coin index of the platform",
                    "type": "integer"
                },
                "date": {
                    "description": "Unix timestamp of the block the transaction was included in",
                    "type": "integer"
                },
                "direction": {
                    "description": "Transaction Direction",
                    "type": "string"
                },
                "error": {
                    "description": "Empty if the transaction was successful,\nelse error explaining why the transaction failed (optional)",
                    "type": "string"
                },
                "fee": {
                    "description": "Transaction fee (native currency)",
                    "type": "string"
                },
                "from": {
                    "description": "Address of the transaction sender",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier",
                    "type": "string"
                },
                "inputs": {
                    "description": "Input addresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/blockatlas.TxOutput"
                    }
                },
                "memo": {
                    "description": "Meta data object",
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "outputs": {
                    "description": "Output addresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/blockatlas.TxOutput"
                    }
                },
                "sequence": {
                    "description": "Transaction nonce or sequence",
                    "type": "integer"
                },
                "status": {
                    "description": "Status of the transaction",
                    "type": "string"
                },
                "to": {
                    "description": "Address of the transaction recipient",
                    "type": "string"
                },
                "type": {
                    "description": "Type of metadata",
                    "type": "string"
                }
            }
        },
        "blockatlas.TxOutput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "blockatlas.TxPage": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/blockatlas.Tx"
            }
        },
        "coin.ExternalCoin": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "integer"
                },
                "decimals": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "endpoint.AddressBatchRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "coin": {
                    "type": "integer"
                }
            }
        },
        "endpoint.AddressesRequest": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/endpoint.AddressBatchRequest"
            }
        },
        "endpoint.ChartCoinInfo": {
            "type": "object",
            "properties": {
                "circulating_supply": {
                    "type": "number"
                },
                "info": {
                    "type": "object",
                    "$ref": "#/definitions/endpoint.CoinInfo"
                },
                "market_cap": {
                    "type": "number"
                },
                "provider": {
                    "type": "string"
                },
                "total_supply": {
                    "type": "number"
                },
                "volume_24": {
                    "type": "number"
                }
            }
        },
        "endpoint.ChartData": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/endpoint.ChartPrice"
                    }
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "endpoint.ChartPrice": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "endpoint.Coin": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "endpoint.CoinInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "explorer": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "short_description": {
                    "type": "string"
                },
                "socials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/endpoint.SocialLink"
                    }
                },
                "source_code": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "white_paper": {
                    "type": "string"
                }
            }
        },
        "endpoint.SocialLink": {
            "type": "object",
            "properties": {
                "handle": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "endpoint.Ticker": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "integer"
                },
                "coin_name": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "last_update": {
                    "type": "string"
                },
                "price": {
                    "type": "object",
                    "$ref": "#/definitions/endpoint.TickerPrice"
                },
                "token_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "endpoint.TickerPrice": {
            "type": "object",
            "properties": {
                "change_24h": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "endpoint.TickerRequest": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/endpoint.Coin"
                    }
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "endpoint.Tickers": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/endpoint.Ticker"
            }
        },
        "model.ErrorDetails": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/model.ErrorDetails"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
