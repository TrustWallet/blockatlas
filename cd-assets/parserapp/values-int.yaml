nameOverride: "blockatlas-parser"
fullnameOverride: "blockatlas-parser"

replicaCount: 1

image:
  repository: asia.gcr.io/kubershmuber-preprod-payments/blockatlas/parser
  tag: latest
  pullPolicy: Always

imagePullSecrets: []

service:
  type: NodePort
  annotations:
    # harcoded backendconfig name for now, may have to parametrize later
    # if this app is moved to a different namespace
    beta.cloud.google.com/backend-config: '{"default": "cloud-armor-backendconfig-payments"}'
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http

namespace: payments

container:
  ports:
    - name: http
      containerPort: 3001
      protocol: TCP

envVars:
  POSTGRESQL_USER: pomeranian
  POSTGRESQL_HOST: localhost
  POSTGRESQL_DB: pomeranian
  POSTGRESQL_MAX_OPEN_CONNS: 50
  POSTGRESQL_MAX_IDLE_CONNS: 2
  POSTGRES_MIGRATE_ENABLED: true
  ENVIRONMENT_SHORT_CODE: int

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  name: eth-wallet
  annotations:
    iam.gke.io/gcp-service-account: k8s-eth-wallet-account@kubershmuber-preprod-payments.iam.gserviceaccount.com

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 750Mi
  requests:
    cpu: 25m
    memory: 10Mi


probes:
  liveness:
    enabled: true
    path: /live
    port: http
    initialDelaySeconds: 5
    periodSeconds: 3
    timeoutSeconds: 3
  readiness:
    enabled: true
    path: /ready
    port: http
    initialDelaySeconds: 5
    periodSeconds: 3
    timeoutSeconds: 3

nodeSelector: {}

tolerations: []

antiAffinity: "hard"

# SQL connection settings
cloudsql:
  enabled: true
  instances: kubershmuber-preprod-payments:asia-east1:app-services-int-payments-postgres-cdeb7fc=tcp:5432

