// The following directive is necessary to make the package coherent:

// +build ignore

// This program generates contributors.go. It can be invoked by running
// go generate
package main

import (
	"encoding/json"
	"github.com/trustwallet/blockatlas/coin"
	"io/ioutil"
	"os"
	"text/template"
	"time"
)

type Coin struct {
	Index    uint   `json:"index"`
	Symbol   string `json:"symbol"`
	Title    string `json:"name"`
	Website  string `json:"link"`
	Decimals uint   `json:"decimals"`
}

func main() {
	buf, err := ioutil.ReadFile("coins.json")
	if err != nil {
		panic(err)
	}

	var coins []coin.Coin
	err = json.Unmarshal(buf, &coins)
	if err != nil {
		panic(err)
	}

	f, err := os.Create("slip44.go")
	if err != nil {
		panic(err)
	}
	defer f.Close()

	slip44Template.Execute(f, map[string]interface{}{
		"Timestamp": time.Now(),
		"Coins": coins,
	})
}

var slip44Template = template.Must(template.New("").Parse(
`// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// {{ .Timestamp }}
// using data from
// coins.json
package coin

const (
{{- range .Coins }}
	{{ .Symbol }} = {{ .Index }}
{{- end }}
)

var Coins = map[uint]Coin {
{{- range .Coins }}
	{{ .Symbol }}: {
		Index: {{ .Symbol }},
		Symbol: "{{ .Symbol }}",
		Title: "{{ .Title }}",
		{{- if .Website }}
		Website: "{{ .Website }}",
		{{- end }}
		{{- if .Decimals }}
		Decimals: {{ .Decimals }},
		{{- end }}
	},
{{- end }}
}
`))
